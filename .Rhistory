geom_bar(stat='identity',width=0.5,color='black',position = position_dodge()) +
scale_fill_manual(values = c(viridis::viridis(6),'black')) +
labs(y='',x='') +
theme_bw() +
theme(legend.position='none',legend.background = element_rect(color='black',fill='white'),
legend.margin=margin(t=-0.5,l=0.05,b=0.05,r=0.1, unit='cm'),
strip.text = element_text(size=18),
axis.text.x = element_text(size=18),
axis.text.y = element_text(size=18),
axis.title.y = element_text(size=18),
axis.title.x = element_text(size=18),
legend.text = element_text(size=18),
legend.title = element_text(size=18))
plot_grid(gg1,gg2)
gg1
ggsave('C:/Users/ngraetz/Dropbox/Budget/Steph_averages.png',device='png',width=11.5,height=6.4,units='in',dpi=600)
ggplot(data=final[!Month=='AVERAGE'],aes(y=Category,x=Cost,fill=Month,label=round(Cost))) +
geom_bar(stat='identity',width=0.5,color='black',position = position_dodge()) +
scale_fill_manual(values = c(viridis::viridis(6),'black')) +
labs(y='',x='') +
facet_wrap(~Month) +
theme_bw() +
theme(legend.position='none',legend.background = element_rect(color='black',fill='white'),
legend.margin=margin(t=-0.5,l=0.05,b=0.05,r=0.1, unit='cm'),
strip.text = element_text(size=18),
axis.text.x = element_text(size=18),
axis.text.y = element_text(size=10),
axis.title.y = element_text(size=18),
axis.title.x = element_text(size=18),
legend.text = element_text(size=18),
legend.title = element_text(size=18))
ggsave('C:/Users/ngraetz/Dropbox/Budget/Steph_monthly.png',device='png',width=11.5,height=6.4,units='in',dpi=600)
final[Month=='AVERAGE']
## Plot by cateogry
gg1 <- ggplot(data=final[Month=='AVERAGE'],aes(y=Category,x=Cost,fill=Month,label=round(Cost))) +
geom_bar(stat='identity',width=0.5,color='black',position = position_dodge()) +
geom_label(size=3,fill='white') +
scale_fill_manual(values = c(viridis::viridis(6),'black')) +
geom_title(paste0('Income = $3458\nAverage expenses = ',final[Month=='AVERAGE',sum(Cost)])) +
labs(y='',x='') +
theme_bw() +
theme(legend.position='none',legend.background = element_rect(color='black',fill='white'),
legend.margin=margin(t=-0.5,l=0.05,b=0.05,r=0.1, unit='cm'),
strip.text = element_text(size=18),
axis.text.x = element_text(size=18),
axis.text.y = element_text(size=18),
axis.title.y = element_text(size=18),
axis.title.x = element_text(size=18),
legend.text = element_text(size=18),
legend.title = element_text(size=18))
## Plot by cateogry
gg1 <- ggplot(data=final[Month=='AVERAGE'],aes(y=Category,x=Cost,fill=Month,label=round(Cost))) +
geom_bar(stat='identity',width=0.5,color='black',position = position_dodge()) +
geom_label(size=3,fill='white') +
scale_fill_manual(values = c(viridis::viridis(6),'black')) +
ggtitle(paste0('Income = $3458\nAverage expenses = ',final[Month=='AVERAGE',sum(Cost)])) +
labs(y='',x='') +
theme_bw() +
theme(legend.position='none',legend.background = element_rect(color='black',fill='white'),
legend.margin=margin(t=-0.5,l=0.05,b=0.05,r=0.1, unit='cm'),
strip.text = element_text(size=18),
axis.text.x = element_text(size=18),
axis.text.y = element_text(size=18),
axis.title.y = element_text(size=18),
axis.title.x = element_text(size=18),
legend.text = element_text(size=18),
legend.title = element_text(size=18))
gg2 <- ggplot(data=final[!Month=='AVERAGE'],aes(y=Category,x=Cost,fill=Month,label=round(Cost))) +
geom_bar(stat='identity',width=0.5,color='black',position = position_dodge()) +
scale_fill_manual(values = c(viridis::viridis(6),'black')) +
labs(y='',x='') +
theme_bw() +
theme(legend.position='none',legend.background = element_rect(color='black',fill='white'),
legend.margin=margin(t=-0.5,l=0.05,b=0.05,r=0.1, unit='cm'),
strip.text = element_text(size=18),
axis.text.x = element_text(size=18),
axis.text.y = element_text(size=18),
axis.title.y = element_text(size=18),
axis.title.x = element_text(size=18),
legend.text = element_text(size=18),
legend.title = element_text(size=18))
plot_grid(gg1,gg2)
gg1
## Plot by cateogry
gg1 <- ggplot(data=final[Month=='AVERAGE'],aes(y=Category,x=Cost,fill=Month,label=round(Cost))) +
geom_bar(stat='identity',width=0.5,color='black',position = position_dodge()) +
geom_label(size=3,fill='white') +
scale_fill_manual(values = c(viridis::viridis(6),'black')) +
ggtitle(paste0('Income = $3458\nAverage expenses = ',final[Month=='AVERAGE',round(sum(Cost))])) +
labs(y='',x='') +
theme_bw() +
theme(legend.position='none',legend.background = element_rect(color='black',fill='white'),
legend.margin=margin(t=-0.5,l=0.05,b=0.05,r=0.1, unit='cm'),
strip.text = element_text(size=18),
axis.text.x = element_text(size=18),
axis.text.y = element_text(size=18),
axis.title.y = element_text(size=18),
axis.title.x = element_text(size=18),
legend.text = element_text(size=18),
legend.title = element_text(size=18))
gg2 <- ggplot(data=final[!Month=='AVERAGE'],aes(y=Category,x=Cost,fill=Month,label=round(Cost))) +
geom_bar(stat='identity',width=0.5,color='black',position = position_dodge()) +
scale_fill_manual(values = c(viridis::viridis(6),'black')) +
labs(y='',x='') +
theme_bw() +
theme(legend.position='none',legend.background = element_rect(color='black',fill='white'),
legend.margin=margin(t=-0.5,l=0.05,b=0.05,r=0.1, unit='cm'),
strip.text = element_text(size=18),
axis.text.x = element_text(size=18),
axis.text.y = element_text(size=18),
axis.title.y = element_text(size=18),
axis.title.x = element_text(size=18),
legend.text = element_text(size=18),
legend.title = element_text(size=18))
plot_grid(gg1,gg2)
gg1
## Plot by cateogry
gg1 <- ggplot(data=final[Month=='AVERAGE'],aes(y=Category,x=Cost,fill=Month,label=round(Cost))) +
geom_bar(stat='identity',width=0.5,color='black',position = position_dodge()) +
geom_label(size=3,fill='white') +
scale_fill_manual(values = c(viridis::viridis(6),'black')) +
ggtitle(paste0('Income = $3458\nAverage expenses = $',final[Month=='AVERAGE',round(sum(Cost))])) +
labs(y='',x='') +
theme_bw() +
theme(legend.position='none',legend.background = element_rect(color='black',fill='white'),
legend.margin=margin(t=-0.5,l=0.05,b=0.05,r=0.1, unit='cm'),
strip.text = element_text(size=18),
axis.text.x = element_text(size=18),
axis.text.y = element_text(size=18),
axis.title.y = element_text(size=18),
axis.title.x = element_text(size=18),
legend.text = element_text(size=18),
legend.title = element_text(size=18))
gg2 <- ggplot(data=final[!Month=='AVERAGE'],aes(y=Category,x=Cost,fill=Month,label=round(Cost))) +
geom_bar(stat='identity',width=0.5,color='black',position = position_dodge()) +
scale_fill_manual(values = c(viridis::viridis(6),'black')) +
labs(y='',x='') +
theme_bw() +
theme(legend.position='none',legend.background = element_rect(color='black',fill='white'),
legend.margin=margin(t=-0.5,l=0.05,b=0.05,r=0.1, unit='cm'),
strip.text = element_text(size=18),
axis.text.x = element_text(size=18),
axis.text.y = element_text(size=18),
axis.title.y = element_text(size=18),
axis.title.x = element_text(size=18),
legend.text = element_text(size=18),
legend.title = element_text(size=18))
plot_grid(gg1,gg2)
gg1
ggsave('C:/Users/ngraetz/Dropbox/Budget/Steph_averages.png',device='png',width=11.5,height=6.4,units='in',dpi=600)
library(data.table)
library(ggplot2)
library(readxl)
library(lubridate)
library(cowplot)
## Process data
d <- read_excel("C:/Users/ngraetz/Dropbox/Budget/Steph Budget.xlsx",sheet=3)
d <- as.data.table(d)
d[, Month := lubridate::month(Month,label = T)]
d[, Cost := abs(Cost)]
## Manual corrections
d[grepl('Dental',Item), drop := 1]
d[Category=='Groceries', Cost := Cost*0.3]
## Aggregate categories
agg <- d[, list(Cost=sum(Cost)), by=c('Month','Category')]
final <- data.table(expand.grid(Month=unique(agg$Month),
Category=unique(agg$Category)))
final <- merge(final, agg, by=c('Month','Category'), all.x=T)
final[is.na(Cost), Cost := 0]
av <- final[, list(Cost=mean(Cost)), by='Category']
av[, Month := 'AVERAGE']
final <- rbind(final,av)
final[, Category := factor(Category,levels=unique(final[Month=='AVERAGE',][order(Cost)]$Category))]
final[, Month := factor(Month,levels=c('AVERAGE','Sep','Oct','Nov','Dec','Jan'))]
final[Month=='AVERAGE'][order(Cost)]
final[Month=='AVERAGE', sum(Cost)]
## Plot by cateogry
gg1 <- ggplot(data=final[Month=='AVERAGE'],aes(y=Category,x=Cost,fill=Month,label=round(Cost))) +
geom_bar(stat='identity',width=0.5,color='black',position = position_dodge()) +
geom_label(size=3,fill='white') +
scale_fill_manual(values = c(viridis::viridis(6),'black')) +
ggtitle(paste0('Income = $7723\nAverage expenses = $',final[Month=='AVERAGE',round(sum(Cost))])) +
labs(y='',x='') +
theme_bw() +
theme(legend.position='none',legend.background = element_rect(color='black',fill='white'),
legend.margin=margin(t=-0.5,l=0.05,b=0.05,r=0.1, unit='cm'),
strip.text = element_text(size=18),
axis.text.x = element_text(size=18),
axis.text.y = element_text(size=18),
axis.title.y = element_text(size=18),
axis.title.x = element_text(size=18),
legend.text = element_text(size=18),
legend.title = element_text(size=18))
gg2 <- ggplot(data=final[!Month=='AVERAGE'],aes(y=Category,x=Cost,fill=Month,label=round(Cost))) +
geom_bar(stat='identity',width=0.5,color='black',position = position_dodge()) +
scale_fill_manual(values = c(viridis::viridis(6),'black')) +
labs(y='',x='') +
theme_bw() +
theme(legend.position='none',legend.background = element_rect(color='black',fill='white'),
legend.margin=margin(t=-0.5,l=0.05,b=0.05,r=0.1, unit='cm'),
strip.text = element_text(size=18),
axis.text.x = element_text(size=18),
axis.text.y = element_text(size=18),
axis.title.y = element_text(size=18),
axis.title.x = element_text(size=18),
legend.text = element_text(size=18),
legend.title = element_text(size=18))
plot_grid(gg1,gg2)
gg1
ggsave('C:/Users/ngraetz/Dropbox/Budget/Nick_averages.png',device='png',width=11.5,height=6.4,units='in',dpi=600)
ggplot(data=final[!Month=='AVERAGE'],aes(y=Category,x=Cost,fill=Month,label=round(Cost))) +
geom_bar(stat='identity',width=0.5,color='black',position = position_dodge()) +
scale_fill_manual(values = c(viridis::viridis(6),'black')) +
labs(y='',x='') +
facet_wrap(~Month) +
theme_bw() +
theme(legend.position='none',legend.background = element_rect(color='black',fill='white'),
legend.margin=margin(t=-0.5,l=0.05,b=0.05,r=0.1, unit='cm'),
strip.text = element_text(size=18),
axis.text.x = element_text(size=18),
axis.text.y = element_text(size=10),
axis.title.y = element_text(size=18),
axis.title.x = element_text(size=18),
legend.text = element_text(size=18),
legend.title = element_text(size=18))
ggsave('C:/Users/ngraetz/Dropbox/Budget/Nick_monthly.png',device='png',width=11.5,height=6.4,units='in',dpi=600)
20.91
21.82
sum(20.91,
21.82
)
sum(5.37,
14.88
)
sum(10310000,149000,1370000,62000)
library(data.table)
library(ggplot2)
options(scipen=999)
repo <- 'C:/Users/ngraetz/Dropbox/Minnesota/repos/student_eviction'
## Sample missingness
t1 <- fread(paste0(repo,'/drb/Table1_rounded.csv'))
total <- sum(t1[variable=='N',-c('variable')])
t2 <- fread(paste0(repo,'/drb/Table2_rounded.csv'))
t2 <- unique(t2[, c('outcome','model','n_rounded')])
t2[, prop := round(n_rounded/total*100)]
t2[model==2,]
dcast(t2, outcome~model, value.var='prop')
## Descriptive sample table
t1 <- fread(paste0(repo,'/drb/Table1_rounded.csv'))
t1 <- t1[!variable %in% c('M','hisp0')]
t1[, variable := factor(variable,levels=c('F','16_24','25_29','30_34','35_plus',
'white','black','asian','aian','other','hisp1',
'parent_joint_income',
'associates','bachelors',
'spouse3','spouse5',
'income_joint_3year','income_joint_5year',
'death_5years','N'))]
for(v in c('notfiled_nonparent','filed_nonparent','evicted_nonparent',
'notfiled_parent','filed_parent','evicted_parent')) {
t1[variable %in% c('F','16_24','25_29','30_34','35_plus','white','black','asian','aian','other','hisp1',
'associates','bachelors',
'spouse3','spouse5'), (v) := get(v)*100]
t1[variable=='death_5years', (v) := get(v)*100000]
t1[variable %in% c('income_joint_3year','income_joint_5year','parent_joint_income'), (v) := get(v)/1000]
}
t1 <- t1[order(variable)]
write.csv(t1, paste0(repo,'/final/Table1.csv'), row.names = F)
## Coefficients table
t2 <- fread(paste0(repo,'/drb/Table2_rounded.csv'))
t2 <- t2[type=='coefficient' & treatment=='filed']
for(v in c('estimate','lower','upper')) t2[, (v) := round(get(v),2)]
t2[estimate<0, p := ifelse(upper<0,'*','')]
t2[estimate>0, p := ifelse(lower>0,'*','')]
t2[, coef := paste0(estimate,p,' (',lower,', ',upper,')')]
t2 <- dcast(t2, outcome+parent~model+treatment, value.var = 'coef')
t2[, outcome := factor(outcome,levels=c('associates','bachelors','income_joint_3year','income_joint_5year',
'spouse3','spouse5','death_5years'))]
t2 <- t2[order(outcome)]
write.csv(t2, paste0(repo,'/final/Table2.csv'), row.names = F)
## Marginal means figure
t2 <- fread(paste0(repo,'/drb/Table2_rounded.csv'))
t2 <- t2[type=='marginal_prediction' & treatment=='filed' & model==3]
t2 <- merge(t2, data.table(clean_var=c('parent0_filed0','parent1_filed0','parent0_filed1','parent1_filed1'),
group=c('Non-parent,\nnot filed','Parent,\nnot filed',
'Non-parent,\nfiled','Parent,\nfiled')))
t2[, group := factor(group,levels=c('Non-parent,\nnot filed','Parent,\nnot filed',
'Non-parent,\nfiled','Parent,\nfiled'))]
t2 <- merge(t2, data.table(outcome=c('associates','bachelors','income_joint_3year','income_joint_5year',
'spouse3','spouse5','death_5years'),
outcome_clean=c("Associate's degree (%)","Bachelor's degree (%)",
'3-year post-grad joint income ($, thousands)',
'5-year post-grad joint income ($, thousands)',
'3-year post-grad marital status (%)',
'5-year post-grad marital status (%)',
'10-year post-grad mortality (deaths per 100,000)')), by='outcome')
t2[, outcome_clean := factor(outcome_clean,levels=(c("Associate's degree (%)","Bachelor's degree (%)",
'3-year post-grad joint income ($, thousands)',
'5-year post-grad joint income ($, thousands)',
'3-year post-grad marital status (%)',
'5-year post-grad marital status (%)',
'10-year post-grad mortality (deaths per 100,000)')))]
t2 <- t2[outcome %in% c('bachelors','income_joint_5year',
'spouse5','death_5years')]
for(v in c('estimate','lower','upper')) t2[outcome %in% c('bachelors','spouse5'), (v) := get(v)*100]
ggplot(data=t2,aes(x=group,y=estimate,ymin=lower,ymax=upper)) +
geom_hline(yintercept = 0, linetype='dashed') +
geom_linerange() +
geom_point(size=3) +
labs(x='',y='Marginal mean') +
facet_wrap(~outcome_clean,nrow=2,scales = 'free_y') +
theme_bw() +
theme(legend.position=c(.7,0.15),legend.background = element_rect(color=NULL,fill='white'),
legend.margin=margin(t=-0.5,l=0.05,b=0.05,r=0.1, unit='cm'),
strip.text = element_text(size=16),
axis.text.x = element_text(size=16),
axis.text.y = element_text(size=18),
axis.title.y = element_text(size=18),
axis.title.x = element_text(size=18),
legend.text = element_text(size=12),
legend.title = element_text(size=12))
ggsave(paste0(repo,'/final/Marginal_means.png'),device='png',width=11.5,height=6.4,units='in',dpi=600)
t2
t2
290/140
library(data.table)
library(tidycensus)
library(ggplot2)
library(tigris)
library(tidyverse)
Sys.setenv(CENSUS_API_KEY='ecae108da10a8741591e6bdda9aee2c1cb438538')
Sys.getenv("CENSUS_API_KEY")
## LOAD ETS TRACTS
ets_tracts <- fread('C:/Users/ncgra/Dropbox/Eviction Lab/project ideas/finance/tract_year_validity.csv')
ets_tracts[, GEOID := as.character(as.numeric(GEOID))]
library(data.table)
library(tidycensus)
library(ggplot2)
library(tigris)
library(tidyverse)
Sys.setenv(CENSUS_API_KEY='ecae108da10a8741591e6bdda9aee2c1cb438538')
Sys.getenv("CENSUS_API_KEY")
## LOAD ETS TRACTS
ets_tracts <- fread('C:/Users/ngraetz/Dropbox/Eviction Lab/project ideas/finance/tract_year_validity.csv')
ets_tracts[, GEOID := as.character(as.numeric(GEOID))]
ets_tracts[nchar(GEOID)==10, GEOID := paste0('0',GEOID)]
ets_site_names <- unique(ets_tracts[!is.na(ets_site),c('GEOID','ets_site')])
ets_tracts <- unique(ets_tracts[!is.na(ets_site),c('GEOID','ets_site')])
ets_tracts[, state := substr(GEOID,1,2)]
## SAVE 2020 TRACT SHAPEFILE
all_tracts <- tracts(class='sf',year=2022,cb=T)
saveRDS(all_tracts, 'C:/Users/ngraetz/Dropbox/Eviction Lab/project ideas/finance/all_tracts.RDS')
county <- as.data.table(get_acs(geography='county',year=2022,variables=c('DP04_0005','DP04_0134')))
county[variable=='DP04_0005', variable := 'county_vacancy_rate']
county[variable=='DP04_0134', variable := 'county_median_rent']
county <- county[,c('GEOID','variable','estimate')]
county <- dcast(county, GEOID~variable)
setnames(county,'GEOID','county_fips')
unique(substr(county_fips,1,2))]
unique(substr(county_fips,1,2))
county[,unique(substr(county_fips,1,2))]
tract
all_tracts
## Load tract-CBSA crosswalk
cbsa_xwalk <- fread('C:/Users/ngraetz/Dropbox/Eviction Lab/project ideas/finance/geocorr2022_2513106385.csv')
cbsa_xwalk
all_tracts
cbsa_xwalk[, GEOID := paste0(county,gsub('[.]','',tract))]
cbsa_xwalk
cbsa_xwalk[, test := 1:.N, by='GEOID']
cbsa_xwalk[test!=1]
cbsa_xwalk
## Load CBSA median rent
rent <- as.data.table(get_acs(geography='cbsa',year=2022,variables=c('DP04_0134')))
rent
## Load CBSA median rent
get_cbsa_rent <- function(y) {
message(y)
rent <- as.data.table(get_acs(geography='cbsa',year=y,survey='acs1',variables=c('DP04_0134')))
rent[, year := y]
return(rent[,c('GEOID','year','estimate')])
}
cbsa_rent <- rbindlist(lapply(2011:2024,get_cbsa_rent))
cbsa_rent <- rbindlist(lapply(c(2011:2019,2021:2024),get_cbsa_rent))
y <- 2024
rent <- as.data.table(get_acs(geography='cbsa',year=y,survey='acs1',variables=c('DP04_0134')))
## Load CBSA median rent
get_cbsa_rent <- function(y) {
message(y)
rent <- as.data.table(get_acs(geography='cbsa',year=y,survey='acs1',variables=c('DP04_0134')))
rent[, year := y]
return(rent[,c('GEOID','year','estimate')])
}
cbsa_rent <- rbindlist(lapply(c(2011:2019,2021:2023),get_cbsa_rent))
cbsa_rent_2020 <- copy(cbsa_rent[year==2019,])
cbsa_rent_2020[, year := 2020]
cbsa_rent <- rbind(cbsa_rent, cbsa_rent_2020)
table(cbsa_rent$year)
cbsa_xwalk
cbsa_rent_long <- merge(cbsa_xwalk, cbsa_rent)
cbsa_xwalk
cbsa_rent
cbsa_rent_long <- merge(cbsa_xwalk, cbsa_rent, by.x='cbsa20', by.y='GEOID')
cbsa_rent_wide <- dcast(cbsa_rent, GEOID~year, value.var='estimate')
cbsa_rent_wide
setnames(cbsa_rent_wide, c('GEOID',paste0('cbsa_rent_',2011:2023)))
cbsa_rent_wide
cbsa_rent_long <- merge(cbsa_xwalk, cbsa_rent_wide, by.x='cbsa20', by.y='GEOID')
cbsa_rent_long
cbsa_rent_long <- merge(cbsa_xwalk, cbsa_rent_wide, by.x='cbsa20', by.y='GEOID', all.x=T)
cbsa_rent_long
cbsa_rent_long[is.na(cbsa_rent_2011)]
cbsa_rent_long[is.na(cbsa_rent_2011), table(CBSAName20)]
cbsa_rent_long
cbsa_rent_wide <- dcast(cbsa_rent, GEOID~year, value.var='estimate')
setnames(cbsa_rent_wide, c('cbsa20',paste0('cbsa_rent_',2011:2023)))
cbsa_rent_long <- merge(cbsa_xwalk[,c('cbsa20','GEOID')], cbsa_rent_wide, by='cbsa20', all.x=T)
cbsa_rent_long
write.csv(cbsa_rent_long, 'C:/Users/ncgra/Dropbox/Eviction Lab/project ideas/finance/cbsa_covs.csv', row.names = F)
write.csv(cbsa_rent_long, 'C:/Users/ngraetz/Dropbox/Eviction Lab/project ideas/finance/cbsa_covs.csv', row.names = F)
cbsa_rent_long[cbsa_rent_2011>10000]
y
y <- 2011
rent <- as.data.table(get_acs(geography='cbsa',year=y,survey='acs1',variables=c('DP04_0134')))
summary(rent$estimate)
rent <- as.data.table(get_acs(geography='us',year=y,survey='acs1',table='DP04'))
rent
rent[estimate==871]
get_cbsa_rent <- function(y) {
message(y)
if(y %in% 2011:2014) rent <- as.data.table(get_acs(geography='cbsa',year=y,survey='acs1',variables=c('DP04_0132')))
if(y %in% 2015:2023) rent <- as.data.table(get_acs(geography='cbsa',year=y,survey='acs1',variables=c('DP04_0134')))
rent[, year := y]
return(rent[,c('GEOID','year','estimate')])
}
cbsa_rent <- rbindlist(lapply(c(2011:2019,2021:2023),get_cbsa_rent))
cbsa_rent_2020 <- copy(cbsa_rent[year==2019,])
cbsa_rent_2020[, year := 2020]
cbsa_rent <- rbind(cbsa_rent, cbsa_rent_2020)
cbsa_rent_wide <- dcast(cbsa_rent, GEOID~year, value.var='estimate')
setnames(cbsa_rent_wide, c('cbsa20',paste0('cbsa_rent_',2011:2023)))
cbsa_rent_long <- merge(cbsa_xwalk[,c('cbsa20','GEOID')], cbsa_rent_wide, by='cbsa20', all.x=T)
write.csv(cbsa_rent_long, 'C:/Users/ngraetz/Dropbox/Eviction Lab/project ideas/finance/cbsa_covs.csv', row.names = F)
county[,unique(substr(county_fips,1,2))]
## Tract rent time series
get_tract_rent <- function(st) {
message(st)
get_year_rent <- function(y,st) {
message(paste0('...',y))
if(y %in% 2011:2014) rent <- as.data.table(get_acs(geography='tract',year=y,variables=c('DP04_0132')))
if(y %in% 2015:2023) rent <- as.data.table(get_acs(geography='tract',year=y,variables=c('DP04_0134')))
rent[, year := y]
return(rent[,c('GEOID','year','estimate')])
}
st_tracts <- rbindlist(lapply(2011:2023),get_year_rent,st)
return(st_tracts)
}
tract_rents <- rbindlist(lapply(county[,unique(substr(county_fips,1,2))],get_tract_rent))
## Tract rent time series
get_tract_rent <- function(st) {
message(st)
get_year_rent <- function(y,st) {
message(paste0('...',y))
if(y %in% 2011:2014) rent <- as.data.table(get_acs(geography='tract',year=y,variables=c('DP04_0132')))
if(y %in% 2015:2023) rent <- as.data.table(get_acs(geography='tract',year=y,variables=c('DP04_0134')))
rent[, year := y]
return(rent[,c('GEOID','year','estimate')])
}
st_tracts <- rbindlist(lapply(2011:2023,get_year_rent,st))
return(st_tracts)
}
tract_rents <- rbindlist(lapply(county[,unique(substr(county_fips,1,2))],get_tract_rent))
## Tract rent time series
get_tract_rent <- function(st) {
message(st)
get_year_rent <- function(y,st) {
message(paste0('...',y))
if(y %in% 2011:2014) rent <- as.data.table(get_acs(geography='tract',year=y,state=st,variables=c('DP04_0132')))
if(y %in% 2015:2023) rent <- as.data.table(get_acs(geography='tract',year=y,state=st,variables=c('DP04_0134')))
rent[, year := y]
return(rent[,c('GEOID','year','estimate')])
}
st_tracts <- rbindlist(lapply(2011:2023,get_year_rent,st))
return(st_tracts)
}
tract_rents <- rbindlist(lapply(county[,unique(substr(county_fips,1,2))],get_tract_rent))
tract_rents
tract_rents[GEOID=='01001020100']
write.csv(tract_rents, 'C:/Users/ngraetz/Dropbox/Eviction Lab/project ideas/finance/tract_rents.csv', row.names = F)
## CPI inflation
cpi <- fread('C:/Users/ngraetz/Dropbox/Minnesota/Projects/IRS/public_soi/cpi.csv')
cpi
cbsa_rent_long <- merge(cbsa_rent_long, cpi, by='year')
cbsa_rent_long
cbsa_rent_wide
cbsa_rent
cbsa_rent
cbsa_rent <- merge(cbsa_rent, cpi, by='year')
cbsa_rent[, estimate := estimate*(314.4/cpi)]
cbsa_rent_wide <- dcast(cbsa_rent, GEOID~year, value.var='estimate')
setnames(cbsa_rent_wide, c('cbsa20',paste0('cbsa_rent_',2011:2023)))
cbsa_rent_long <- merge(cbsa_xwalk[,c('cbsa20','GEOID')], cbsa_rent_wide, by='cbsa20', all.x=T)
write.csv(cbsa_rent_long, 'C:/Users/ngraetz/Dropbox/Eviction Lab/project ideas/finance/cbsa_covs.csv', row.names = F)
cbsa_rent_long
summary(cbsa_rent_long$cbsa_rent_2011)
tract_rents
tract_rents <- merge(tract_rents, cpi, by='year')
tract_rents[, estimate := estimate*(314.4/cpi)]
write.csv(tract_rents, 'C:/Users/ngraetz/Dropbox/Eviction Lab/project ideas/finance/tract_rents.csv', row.names = F)
remotes::install_github('rstudio/blogdown')
blogdown::serve_site()
setwd('C:/Users/ngraetz/Dropbox/Penn/repos/website')
blogdown::serve_site()
